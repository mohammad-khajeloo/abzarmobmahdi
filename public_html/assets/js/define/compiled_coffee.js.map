{"version":3,"sources":["dropzone.coffee"],"names":[],"mappings":"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","file":"compiled_coffee.js","sourcesContent":["###\n#\n# More info at [www.dropzonejs.com](http://www.dropzonejs.com)\n#\n# Copyright (c) 2012, Matias Meno\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n#\n###\n\ndefine 'dropzone', ['jquery', 'underscore', 'tools'], (jQuery, _, tools) ->\n  noop = ->\n\n\n  # The Emitter class provides the ability to call `.on()` on Dropzone to listen\n  # to events.\n  # It is strongly based on component's emitter class, and I removed the\n  # functionality because of the dependency hell with different frameworks.\n  class Emitter\n\n    # Add an event listener for given event\n    addEventListener: @::on\n    on: (event, fn) ->\n      @_callbacks = @_callbacks || {}\n      # Create namespace for this event\n      @_callbacks[event] = [] unless @_callbacks[event]\n      @_callbacks[event].push fn\n      return @\n\n\n    emit: (event, args...) ->\n      @_callbacks = @_callbacks || {}\n      callbacks = @_callbacks[event]\n\n      if callbacks\n        callback.apply @, args for callback in callbacks\n\n      return @\n\n    # Remove event listener for given event. If fn is not provided, all event\n    # listeners for that event will be removed. If neither is provided, all\n    # event listeners will be removed.\n    removeListener: @::off\n    removeAllListeners: @::off\n    removeEventListener: @::off\n    off: (event, fn) ->\n      if !@_callbacks || arguments.length == 0\n        @_callbacks = {}\n        return @\n\n      # specific event\n      callbacks = @_callbacks[event]\n      return @ unless callbacks\n\n      # remove all handlers\n      if arguments.length == 1\n        delete @_callbacks[event]\n        return @\n\n      # remove specific handler\n      for callback, i in callbacks\n        if callback == fn\n          callbacks.splice i, 1\n          break\n\n      return @\n\n  class Dropzone extends Emitter\n\n    # Exposing the emitter class, mainly for tests\n    Emitter: Emitter\n\n    ###\n    This is a list of all available events you can register on a dropzone object.\n\n    You can register an event handler like this:\n\n        dropzone.on(\"dragEnter\", function() { });\n\n    ###\n    events: [\n      \"drop\"\n      \"dragstart\"\n      \"dragend\"\n      \"dragenter\"\n      \"dragover\"\n      \"dragleave\"\n      \"addedfile\"\n      \"addedfiles\"\n      \"removedfile\"\n      \"thumbnail\"\n      \"error\"\n      \"errormultiple\"\n      \"processing\"\n      \"processingmultiple\"\n      \"uploadprogress\"\n      \"totaluploadprogress\"\n      \"sending\"\n      \"sendingmultiple\"\n      \"success\"\n      \"successmultiple\"\n      \"canceled\"\n      \"canceledmultiple\"\n      \"complete\"\n      \"completemultiple\"\n      \"reset\"\n      \"maxfilesexceeded\"\n      \"maxfilesreached\"\n      \"queuecomplete\"\n    ]\n\n\n\n    defaultOptions:\n      # Has to be specified on elements other than form (or when the form\n      # doesn't have an `action` attribute). You can also\n      # provide a function that will be called with `files` and\n      # must return the url (since `v3.12.0`)\n      url: null\n\n      # can be changed to `\"put\"` if necessary. You can also provide a function\n      # that will be called with `files` and must return the method (since `v3.12.0`).\n      method: \"post\"\n\n      # foo\n      withCredentials: no\n\n      # The timeout for the XHR requests in milliseconds (since `v4.4.0`).\n      timeout: 30000\n\n      # How many file uploads to process in parallel (See the\n      # *Enqueuing file uploads* documentation section for more info)\n      parallelUploads: 2\n\n      # Whether to send multiple files in one request. If\n      # this it set to true, then the fallback file input element will\n      # have the `multiple` attribute as well. This option will\n      # also trigger additional events (like `processingmultiple`). See the events\n      # documentation section for more information.\n      uploadMultiple: no\n\n      # If not `null` defines how many files this Dropzone handles. If it exceeds,\n      # the event `maxfilesexceeded` will be called. The dropzone element gets the\n      # class `dz-max-files-reached` accordingly so you can provide visual feedback.\n      maxFilesize: 256\n\n      # The name of the file param that gets transferred.\n      # **NOTE**: If you have the option  `uploadMultiple` set to `true`, then\n      # Dropzone will append `[]` to the name.\n      paramName: \"image\"\n\n      # Whether thumbnails for images should be generated\n      createImageThumbnails: true\n\n      # In MB. When the filename exceeds this limit, the thumbnail will not be generated.\n      maxThumbnailFilesize: 10\n\n      # If `null`, the ratio of the image will be used to calculate it.\n      thumbnailWidth: 120\n\n      # The same as `thumbnailWidth`. If both are null, images will not be resized.\n      thumbnailHeight: 120\n\n      # How the images should be scaled down in case both, `thumbnailWidth` and `thumbnailHeight` are provided.\n      # Can be either `contain` or `crop`.\n      thumbnailMethod: 'crop'\n\n      # If set, images will be resized to these dimensions before being **uploaded**.\n      # If only one, `resizeWidth` **or** `resizeHeight` is provided, the original aspect\n      # ratio of the file will be preserved.\n      #\n      # The `options.transformFile` function uses these options, so if the `transformFile` function\n      # is overridden, these options don't do anything.\n      resizeWidth: null\n\n      # See `resizeWidth`.\n      resizeHeight: null\n\n      # The mime type of the resized image (before it gets uploaded to the server).\n      # If `null` the original mime type will be used. To force jpeg, for example, use `image/jpeg`.\n      # See `resizeWidth` for more information.\n      resizeMimeType: null\n\n      # The quality of the resized images. See `resizeWidth`.\n      resizeQuality: 0.8\n\n      # How the images should be scaled down in case both, `resizeWidth` and `resizeHeight` are provided.\n      # Can be either `contain` or `crop`.\n      resizeMethod: 'contain'\n\n      # The base that is used to calculate the filesize. You can change this to\n      # 1024 if you would rather display kibibytes, mebibytes, etc...\n      # 1024 is technically incorrect, because `1024 bytes` are `1 kibibyte` not `1 kilobyte`.\n      # You can change this to `1024` if you don't care about validity.\n      filesizeBase: 1000\n\n      # Can be used to limit the maximum number of files that will be handled\n      # by this Dropzone\n      maxFiles: null\n\n      # Can be an object of additional parameters to transfer to the server.\n      # This is the same as adding hidden input fields in the form element.\n      params: { }\n\n      # An optional object to send additional headers to the server. Eg:\n      # `{ \"My-Awesome-Header\": \"header value\" }`\n      headers: null\n\n      # If true, the dropzone will present a file selector when clicked.\n\n      # If `true`, the dropzone element itself will be clickable, if `false`\n      # nothing will be clickable.\n      #\n      # You can also pass an HTML element, a CSS selector (for multiple elements)\n      # or an array of those. In that case, all of those elements will trigger an\n      # upload when clicked.\n      clickable: yes\n\n      # Whether hidden files in directories should be ignored.\n      ignoreHiddenFiles: yes\n\n\n      # The default implementation of `accept` checks the file's mime type or\n      # extension against this list. This is a comma separated list of mime\n      # types or file extensions.\n      #\n      # Eg.: `image/*,application/pdf,.psd`\n      #\n      # If the Dropzone is `clickable` this option will also be used as\n      # [`accept`](https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept)\n      # parameter on the hidden file input as well.\n      acceptedFiles: null\n\n      # **Deprecated!**\n      # Use acceptedFiles instead.\n      acceptedMimeTypes: null\n\n      # If false, files will be added to the queue but the queue will not be\n      # processed automatically.\n      # This can be useful if you need some additional user input before sending\n      # files (or if you want want all files sent at once).\n      # If you're ready to send the file simply call `myDropzone.processQueue()`.\n      #\n      # See the [enqueuing file uploads](#enqueuing-file-uploads) documentation\n      # section for more information.\n      autoProcessQueue: on\n\n      # If false, files added to the dropzone will not be queued by default.\n      # You'll have to call `enqueueFile(file)` manually.\n      autoQueue: on\n\n      # If `true`, this will add a link to every file preview to remove or cancel (if\n      # already uploading) the file. The `dictCancelUpload`, `dictCancelUploadConfirmation`\n      # and `dictRemoveFile` options are used for the wording.\n      addRemoveLinks: no\n\n      # Defines where to display the file previews – if `null` the\n      # Dropzone element itself is used. Can be a plain `HTMLElement` or a CSS\n      # selector. The element should have the `dropzone-previews` class so\n      # the previews are displayed properly.\n      previewsContainer: null\n\n      # This is the element the hidden input field (which is used when clicking on the\n      # dropzone to trigger file selection) will be appended to. This might\n      # be important in case you use frameworks to switch the content of your page.\n      hiddenInputContainer: \"body\"\n\n      # If null, no capture type will be specified\n      # If camera, mobile devices will skip the file selection and choose camera\n      # If microphone, mobile devices will skip the file selection and choose the microphone\n      # If camcorder, mobile devices will skip the file selection and choose the camera in video mode\n      # On apple devices multiple must be set to false.  AcceptedFiles may need to\n      # be set to an appropriate mime type (e.g. \"image/*\", \"audio/*\", or \"video/*\").\n      capture: null\n\n      # **Deprecated**. Use `renameFile` instead.\n      renameFilename: null\n\n      # A function that is invoked before the file is uploaded to the server and renames the file.\n      # This function gets the `File` as argument and can use the `file.name`. The actual name of the\n      # file that gets used during the upload can be accessed through `file.upload.filename`.\n      renameFile: null\n\n      # If `true` the fallback will be forced. This is very useful to test your server\n      # implementations first and make sure that everything works as\n      # expected without dropzone if you experience problems, and to test\n      # how your fallbacks will look.\n      forceFallback: off\n\n      # The text used before any files are dropped.\n      dictDefaultMessage: \"فایل مورد نظر را در این قسمت آپلود کنید\"\n\n      # The text that replaces the default message text it the browser is not supported.\n      dictFallbackMessage: \"مرورگر شما از این افزونه پشتیبانی نمیکند.\"\n\n      # The text that will be added before the fallback form.\n      # If you provide a  fallback element yourself, or if this option is `null` this will\n      # be ignored.\n      dictFallbackText: \"از فرم زیر برای آپلود استفاده کنید.\"\n\n      # If the filesize is too big.\n      # `{{filesize}}` and `{{maxFilesize}}` will be replaced with the respective configuration values.\n      dictFileTooBig: \"فایل مورد نظر بزرگ تر از حد مجاز است ({{filesize}}مگابایت). حد اکثر فایل مجاز: {{maxFilesize}}مگابایت.\"\n\n      # If the file doesn't match the file type.\n      dictInvalidFileType: \"این نوع از فایل برای آپلود مجاز نیست.\"\n\n      # If the server response was invalid.\n      # `{{statusCode}}` will be replaced with the servers status code.\n      dictResponseError: \"سرور با کد {{statusCode}} پاسخ داد.\"\n\n      # If `addRemoveLinks` is true, the text to be used for the cancel upload link.\n      dictCancelUpload: \"لغو آپلود\"\n\n      # If `addRemoveLinks` is true, the text to be used for confirmation when cancelling upload.\n      dictCancelUploadConfirmation: \"آیا از لغو آپلود مطمئن هستید ?\"\n\n      # If `addRemoveLinks` is true, the text to be used to remove a file.\n      dictRemoveFile: \"حذف فایل\"\n\n      # If this is not null, then the user will be prompted before removing a file.\n      dictRemoveFileConfirmation: 'آیا از حذف این فایل اطمینان دارید ؟'\n\n      # Displayed if `maxFiles` is st and exceeded.\n      # The string `{{maxFiles}}` will be replaced by the configuration value.\n      dictMaxFilesExceeded: \"حد اکثر تعداد فایل مجاز آپلود استفاده شده است.\"\n\n      # Allows you to translate the different units. Starting with `tb` for terabytes and going down to\n      # `b` for bytes.\n      dictFileSizeUnits: { tb: \"ترابایت\", gb: \"گیگابایت\", mb: \"مگابایت\", kb: \"کیلوبایت\", b: \"بایت\" }\n\n      dictFileExists : \"این فایل قبلا اضافه شده است.\"\n\n      # Called when dropzone initialized\n      # You can add event listeners here\n      init: -> noop\n\n      # A function that gets a [file](https://developer.mozilla.org/en-US/docs/DOM/File)\n      # and a `done` function as parameters.\n      #\n      # If the done function is invoked without arguments, the file is \"accepted\" and will\n      # be processed. If you pass an error message, the file is rejected, and the error\n      # message will be displayed.\n      # This function will not be called if the file is too big or doesn't match the mime types.\n      accept: (file, done) -> done()\n\n\n      # Gets called when the browser is not supported.\n      # The default implementation shows the fallback input field and adds\n      # a text.\n      fallback: ->\n        # This code should pass in IE7... :(\n        @element.className = \"#{@element.className} dz-browser-not-supported\"\n\n        for child in @element.getElementsByTagName \"div\"\n          if /(^| )dz-message($| )/.test child.className\n            messageElement = child\n            child.className = \"dz-message\" # Removes the 'dz-default' class\n            continue\n        unless messageElement\n          messageElement = Dropzone.createElement \"\"\"<div class=\"dz-message\"><span></span></div>\"\"\"\n          @element.appendChild messageElement\n\n        span = messageElement.getElementsByTagName(\"span\")[0]\n        if span\n          if span.textContent?\n            span.textContent = @options.dictFallbackMessage\n          else if span.innerText?\n            span.innerText = @options.dictFallbackMessage\n\n        @element.appendChild @getFallbackForm()\n\n\n\n      # Gets called to calculate the thumbnail dimensions.\n      #\n      # It gets `file`, `width` and `height` (both may be `null`) as parameters and must return an object containing:\n      #\n      #  - `srcWidth` & `srcHeight` (required)\n      #  - `trgWidth` & `trgHeight` (required)\n      #  - `srcX` & `srcY` (optional, default `0`)\n      #  - `trgX` & `trgY` (optional, default `0`)\n      #\n      # Those values are going to be used by `ctx.drawImage()`.\n      resize: (file, width, height, resizeMethod) ->\n        info =\n          srcX: 0\n          srcY: 0\n          srcWidth: file.width\n          srcHeight: file.height\n\n        srcRatio = file.width / file.height\n\n        # Automatically calculate dimensions if not specified\n        if !width? and !height?\n          width = info.srcWidth\n          height = info.srcHeight\n        else if !width?\n          width = height * srcRatio\n        else if !height?\n          height = width / srcRatio\n\n        # Make sure images aren't upscaled\n        width = Math.min width, info.srcWidth\n        height = Math.min height, info.srcHeight\n\n        trgRatio = width / height\n\n        if info.srcWidth > width or info.srcHeight > height\n          # Image is bigger and needs rescaling\n          if resizeMethod == 'crop'\n            if srcRatio > trgRatio\n              info.srcHeight = file.height\n              info.srcWidth = info.srcHeight * trgRatio\n            else\n              info.srcWidth = file.width\n              info.srcHeight = info.srcWidth / trgRatio\n          else if resizeMethod == 'contain'\n            # Method 'contain'\n            if srcRatio > trgRatio\n              height = width / srcRatio\n            else\n              width = height * srcRatio\n          else\n            throw new Error \"Unknown resizeMethod '#{resizeMethod}'\"\n\n        info.srcX = (file.width - info.srcWidth) / 2\n        info.srcY = (file.height - info.srcHeight) / 2\n\n        info.trgWidth = width\n        info.trgHeight = height\n\n        return info\n\n      # Can be used to transform the file (for example, resize an image if necessary).\n      #\n      # The default implementation uses `resizeWidth` and `resizeHeight` (if provided) and resizes\n      # images according to those dimensions.\n      #\n      # Gets the `file` as the first parameter, and a `done()` function as the second, that needs\n      # to be invoked with the file when the transformation is done.\n      transformFile: (file, done) ->\n        if (@options.resizeWidth || @options.resizeHeight) and file.type.match(/image.*/)\n          @resizeImage file, @options.resizeWidth, @options.resizeHeight, @options.resizeMethod, done\n        else\n          done file\n\n\n      # A string that contains the template used for each dropped\n      # file. Change it to fulfill your needs but make sure to properly\n      # provide all elements.\n      #\n      # If you want to use an actual HTML element instead of providing a String\n      # as a config option, you could create a div with the id `tpl`,\n      # put the template inside it and provide the element like this:\n      #\n      #     document\n      #       .querySelector('#tpl')\n      #       .innerHTML\n      #\n      previewTemplate:  \"\"\"\n                        <div class=\"dz-preview dz-file-preview\">\n                          <div class=\"dz-actions\">\n                            <span class=\"is-main-item\" data-dz-set-main></span>\n                            <span class=\"is-secondary-item\" data-dz-set-secondary></span>\n                            <span class=\"remove-item\" data-dz-remove></span>\n                            <span class=\"add-caption\" data-dz-add-cation></span>\n                          </div>\n                          <div class=\"dz-image\"><img data-dz-thumbnail /></div>\n                          <div class=\"dz-details\">\n                            <div class=\"dz-size\"><span data-dz-size></span></div>\n                            <div class=\"dz-filename\"><span data-dz-name></span></div>\n                          </div>\n                          <div class=\"dz-progress\"><span class=\"dz-upload\" data-dz-uploadprogress></span></div>\n                          <div class=\"dz-error-message\"><span data-dz-errormessage></span></div>\n                          <div class=\"dz-success-mark\">\n                            <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\n                              <title>Check</title>\n                              <defs></defs>\n                              <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\n                                <path d=\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" id=\"Oval-2\" stroke-opacity=\"0.198794158\" stroke=\"#747474\" fill-opacity=\"0.816519475\" fill=\"#FFFFFF\" sketch:type=\"MSShapeGroup\"></path>\n                              </g>\n                            </svg>\n                          </div>\n                          <div class=\"dz-error-mark\">\n                            <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\n                              <title>Error</title>\n                              <defs></defs>\n                              <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\n                                <g id=\"Check-+-Oval-2\" sketch:type=\"MSLayerGroup\" stroke=\"#747474\" stroke-opacity=\"0.198794158\" fill=\"#FFFFFF\" fill-opacity=\"0.816519475\">\n                                  <path d=\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" id=\"Oval-2\" sketch:type=\"MSShapeGroup\"></path>\n                                </g>\n                              </g>\n                            </svg>\n                          </div>\n                        </div>\n                        \"\"\"\n\n      # END OPTIONS\n      # (Required by the dropzone documentation parser)\n\n\n      ###\n      Those functions register themselves to the events on init and handle all\n      the user interface specific stuff. Overwriting them won't break the upload\n      but can break the way it's displayed.\n      You can overwrite them if you don't like the default behavior. If you just\n      want to add an additional event handler, register it on the dropzone object\n      and don't overwrite those options.\n      ###\n\n\n\n\n      # Those are self explanatory and simply concern the DragnDrop.\n      drop: (e) -> @element.classList.remove \"dz-drag-hover\"\n      dragstart: noop\n      dragend: (e) -> @element.classList.remove \"dz-drag-hover\"\n      dragenter: (e) -> @element.classList.add \"dz-drag-hover\"\n      dragover: (e) -> @element.classList.add \"dz-drag-hover\"\n      dragleave: (e) -> @element.classList.remove \"dz-drag-hover\"\n\n      paste: noop\n\n      # Called whenever there are no files left in the dropzone anymore, and the\n      # dropzone should be displayed as if in the initial state.\n      reset: ->\n        @element.classList.remove \"dz-started\"\n\n      # Called when a file is added to the queue\n      # Receives `file`\n      addedfile: (file) ->\n        @element.classList.add \"dz-started\" if @element == @previewsContainer\n\n        if @previewsContainer\n          file.previewElement = Dropzone.createElement @options.previewTemplate.trim()\n          file.previewTemplate = file.previewElement # Backwards compatibility\n          @previewsContainer.appendChild file.previewElement\n          node.textContent = file.name for node in file.previewElement.querySelectorAll(\"[data-dz-name]\")\n          node.innerHTML = @filesize file.size for node in file.previewElement.querySelectorAll(\"[data-dz-size]\")\n\n          if @options.addRemoveLinks\n            file._removeLink = Dropzone.createElement \"\"\"<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>#{@options.dictRemoveFile}</a>\"\"\"\n            file.previewElement.appendChild file._removeLink\n\n          removeFileEvent = (e) =>\n            e.preventDefault()\n            e.stopPropagation()\n            if file.status == Dropzone.UPLOADING\n              Dropzone.confirm @options.dictCancelUploadConfirmation, => @removeFile file\n            else\n              if @options.dictRemoveFileConfirmation\n                Dropzone.confirm @options.dictRemoveFileConfirmation, => @removeFile file\n              else\n                @removeFile file\n\n          addCaptionToFile = (e) =>\n            e.preventDefault()\n            e.stopPropagation()\n            Dropzone.addCaptionToFile file\n          setMainFile = (e) =>\n            e.preventDefault()\n            e.stopPropagation()\n            Dropzone.setMainFile file\n\n          setSecondaryFile = (e) =>\n            e.preventDefault()\n            e.stopPropagation()\n            Dropzone.setSecondaryFile file\n\n          removeLink.addEventListener \"click\", removeFileEvent for removeLink in file.previewElement.querySelectorAll(\"[data-dz-remove]\")\n          addCaptionLink.addEventListener \"click\", addCaptionToFile for addCaptionLink in file.previewElement.querySelectorAll(\"[data-dz-add-cation]\")\n          setMainFileLink.addEventListener \"click\", setMainFile for setMainFileLink in file.previewElement.querySelectorAll(\"[data-dz-set-main]\")\n          setSecondaryFileLink.addEventListener \"click\", setSecondaryFile for setSecondaryFileLink in file.previewElement.querySelectorAll(\"[data-dz-set-secondary]\")\n\n\n      # Called whenever a file is removed.\n      removedfile: (file) ->\n        file.previewElement?.parentNode.removeChild file.previewElement if file.previewElement\n        @_updateMaxFilesReachedClass()\n\n      # Called when a thumbnail has been generated\n      # Receives `file` and `dataUrl`\n      thumbnail: (file, dataUrl) ->\n        if file.previewElement\n          file.previewElement.classList.remove \"dz-file-preview\"\n          for thumbnailElement in file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\")\n            thumbnailElement.alt = file.name\n            thumbnailElement.src = dataUrl\n\n          setTimeout (=> file.previewElement.classList.add \"dz-image-preview\"), 1\n\n      # Called whenever an error occurs\n      # Receives `file` and `message`\n      error: (file, message) ->\n        if file.previewElement\n          file.previewElement.classList.add \"dz-error\"\n          message = message.error if typeof message != \"String\" and message.error\n          node.textContent = message for node in file.previewElement.querySelectorAll(\"[data-dz-errormessage]\")\n\n      errormultiple: noop\n\n      # Called when a file gets processed. Since there is a cue, not all added\n      # files are processed immediately.\n      # Receives `file`\n      processing: (file) ->\n        if file.previewElement\n          file.previewElement.classList.add \"dz-processing\"\n          file._removeLink.textContent = @options.dictCancelUpload if file._removeLink\n\n      processingmultiple: noop\n\n      # Called whenever the upload progress gets updated.\n      # Receives `file`, `progress` (percentage 0-100) and `bytesSent`.\n      # To get the total number of bytes of the file, use `file.size`\n      uploadprogress: (file, progress, bytesSent) ->\n        if file.previewElement\n          for node in file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\")\n            if node.nodeName is 'PROGRESS'\n              node.value = progress\n            else\n              node.style.width = \"#{progress}%\"\n\n      # Called whenever the total upload progress gets updated.\n      # Called with totalUploadProgress (0-100), totalBytes and totalBytesSent\n      totaluploadprogress: noop\n\n      # Called just before the file is sent. Gets the `xhr` object as second\n      # parameter, so you can modify it (for example to add a CSRF token) and a\n      # `formData` object to add additional information.\n      sending: noop\n\n      sendingmultiple: noop\n\n      # When the complete upload is finished and successful\n      # Receives `file`\n      success: (file) ->\n        file.previewElement.classList.add \"dz-success\" if file.previewElement\n\n      successmultiple: noop\n\n      # When the upload is canceled.\n      canceled: (file) -> @emit \"error\", file, \"Upload canceled.\"\n\n      canceledmultiple: noop\n\n      # When the upload is finished, either with success or an error.\n      # Receives `file`\n      complete: (file) ->\n        file._removeLink.textContent = @options.dictRemoveFile if file._removeLink\n        file.previewElement.classList.add \"dz-complete\" if file.previewElement\n\n      completemultiple: noop\n\n      maxfilesexceeded: noop\n\n      maxfilesreached: noop\n\n      queuecomplete: noop\n\n      addedfiles: noop\n\n    # global utility\n    extend = (target, objects...) ->\n      for object in objects\n        target[key] = val for key, val of object\n      target\n\n    constructor: (@element, options) ->\n      # For backwards compatibility since the version was in the prototype previously\n      @version = Dropzone.version\n\n      @defaultOptions.previewTemplate = @defaultOptions.previewTemplate.replace /\\n*/g, \"\"\n\n      @clickableElements = [ ]\n      @listeners = [ ]\n      @files = [] # All files\n\n      @element = document.querySelector @element if typeof @element == \"string\"\n\n      # Not checking if instance of HTMLElement or Element since IE9 is extremely weird.\n      throw new Error \"Invalid dropzone element.\" unless @element and @element.nodeType?\n\n      throw new Error \"Dropzone already attached.\" if @element.dropzone\n\n      # Now add this dropzone to the instances.\n      Dropzone.instances.push @\n\n      # Put the dropzone inside the element itself.\n      @element.dropzone = @\n\n      elementOptions = Dropzone.optionsForElement(@element) ? { }\n\n      @options = extend { }, @defaultOptions, elementOptions, options ? { }\n\n      # If the browser failed, just call the fallback and leave\n      return @options.fallback.call this if @options.forceFallback or !Dropzone.isBrowserSupported()\n\n      # @options.url = @element.getAttribute \"action\" unless @options.url?\n      @options.url = @element.getAttribute \"action\" unless @options.url?\n\n      throw new Error \"No URL provided.\" unless @options.url\n\n      throw new Error \"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\" if @options.acceptedFiles and @options.acceptedMimeTypes\n\n      # Backwards compatibility\n      if @options.acceptedMimeTypes\n        @options.acceptedFiles = @options.acceptedMimeTypes\n        delete @options.acceptedMimeTypes\n\n      # Backwards compatibility\n      if @options.renameFilename?\n        @options.renameFile = (file) => @options.renameFilename.call this, file.name, file\n\n      @options.method = @options.method.toUpperCase()\n\n      if (fallback = @getExistingFallback()) and fallback.parentNode\n        # Remove the fallback\n        fallback.parentNode.removeChild fallback\n\n      # Display previews in the previewsContainer element or the Dropzone element unless explicitly set to false\n      if @options.previewsContainer != false\n        if @options.previewsContainer\n          @previewsContainer = Dropzone.getElement @options.previewsContainer, \"previewsContainer\"\n        else\n          @previewsContainer = @element\n\n      if @options.clickable\n        if @options.clickable == yes\n          @clickableElements = [ @element ]\n        else\n          @clickableElements = Dropzone.getElements @options.clickable, \"clickable\"\n\n\n      @init()\n\n\n    # Returns all files that have been accepted\n    getAcceptedFiles: -> file for file in @files when file.accepted\n\n    # Returns all files that have been rejected\n    # Not sure when that's going to be useful, but added for completeness.\n    getRejectedFiles: -> file for file in @files when not file.accepted\n\n    getFilesWithStatus: (status) -> file for file in @files when file.status == status\n\n    # Returns all files that are in the queue\n    getQueuedFiles: -> @getFilesWithStatus Dropzone.QUEUED\n\n    getUploadingFiles: -> @getFilesWithStatus Dropzone.UPLOADING\n\n    getAddedFiles: -> @getFilesWithStatus Dropzone.ADDED\n\n    # Files that are either queued or uploading\n    getActiveFiles: -> file for file in @files when file.status == Dropzone.UPLOADING or file.status == Dropzone.QUEUED\n\n    # The function that gets called when Dropzone is initialized. You\n    # can (and should) setup event listeners inside this function.\n    init: ->\n      # In case it isn't set already\n      @element.setAttribute(\"enctype\", \"multipart/form-data\") if @element.tagName == \"form\"\n\n      if @element.classList.contains(\"dropzone\") and !@element.querySelector(\".dz-message\")\n        @element.appendChild Dropzone.createElement \"\"\"<div class=\"dz-default dz-message\"><span>#{@options.dictDefaultMessage}</span></div>\"\"\"\n\n      if @clickableElements.length\n        setupHiddenFileInput = =>\n          @hiddenFileInput.parentNode.removeChild @hiddenFileInput if @hiddenFileInput\n          @hiddenFileInput = document.createElement \"input\"\n          @hiddenFileInput.setAttribute \"type\", \"file\"\n          @hiddenFileInput.setAttribute \"multiple\", \"multiple\" if !@options.maxFiles? || @options.maxFiles > 1\n          @hiddenFileInput.className = \"dz-hidden-input\"\n\n          @hiddenFileInput.setAttribute \"accept\", @options.acceptedFiles if @options.acceptedFiles?\n          @hiddenFileInput.setAttribute \"capture\", @options.capture if @options.capture?\n\n          # Not setting `display=\"none\"` because some browsers don't accept clicks\n          # on elements that aren't displayed.\n          @hiddenFileInput.style.visibility = \"hidden\"\n          @hiddenFileInput.style.position = \"absolute\"\n          @hiddenFileInput.style.top = \"0\"\n          @hiddenFileInput.style.left = \"0\"\n          @hiddenFileInput.style.height = \"0\"\n          @hiddenFileInput.style.width = \"0\"\n          document.querySelector(@options.hiddenInputContainer).appendChild @hiddenFileInput\n          @hiddenFileInput.addEventListener \"change\", =>\n            files = @hiddenFileInput.files\n            @addFile file for file in files if files.length\n            @emit \"addedfiles\", files\n            setupHiddenFileInput()\n        setupHiddenFileInput()\n\n      @URL = window.URL ? window.webkitURL\n\n\n      # Setup all event listeners on the Dropzone object itself.\n      # They're not in @setupEventListeners() because they shouldn't be removed\n      # again when the dropzone gets disabled.\n      @on eventName, @options[eventName] for eventName in @events\n\n      @on \"uploadprogress\", => @updateTotalUploadProgress()\n\n      @on \"removedfile\", => @updateTotalUploadProgress()\n\n      @on \"canceled\", (file) => @emit \"complete\", file\n\n      # Emit a `queuecomplete` event if all files finished uploading.\n      @on \"complete\", (file) =>\n        if @getAddedFiles().length == 0 and @getUploadingFiles().length == 0 and @getQueuedFiles().length == 0\n          # This needs to be deferred so that `queuecomplete` really triggers after `complete`\n          setTimeout (=> @emit \"queuecomplete\"), 0\n\n\n      noPropagation = (e) ->\n        e.stopPropagation()\n        if e.preventDefault\n          e.preventDefault()\n        else\n          e.returnValue = false\n\n      # Create the listeners\n      @listeners = [\n        {\n          element: @element\n          events:\n            \"dragstart\": (e) =>\n              @emit \"dragstart\", e\n            \"dragenter\": (e) =>\n              noPropagation e\n              @emit \"dragenter\", e\n            \"dragover\": (e) =>\n              # Makes it possible to drag files from chrome's download bar\n              # http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar\n              # Try is required to prevent bug in Internet Explorer 11 (SCRIPT65535 exception)\n              try efct = e.dataTransfer.effectAllowed\n              e.dataTransfer.dropEffect = if 'move' == efct or 'linkMove' == efct then 'move' else 'copy'\n\n              noPropagation e\n              @emit \"dragover\", e\n            \"dragleave\": (e) =>\n              @emit \"dragleave\", e\n            \"drop\": (e) =>\n              noPropagation e\n              @drop e\n            \"dragend\": (e) =>\n              @emit \"dragend\", e\n\n            # This is disabled right now, because the browsers don't implement it properly.\n            # \"paste\": (e) =>\n            #   noPropagation e\n            #   @paste e\n        }\n      ]\n\n      @clickableElements.forEach (clickableElement) =>\n        @listeners.push\n          element: clickableElement\n          events:\n            \"click\": (evt) =>\n              # Only the actual dropzone or the message element should trigger file selection\n              if (clickableElement != @element) or (evt.target == @element or Dropzone.elementInside evt.target, @element.querySelector \".dz-message\")\n                @hiddenFileInput.click() # Forward the click\n              return true\n\n      @enable()\n\n      @options.init.call @\n\n    # Not fully tested yet\n    destroy: ->\n      @disable()\n      @removeAllFiles true\n      if @hiddenFileInput?.parentNode\n        @hiddenFileInput.parentNode.removeChild @hiddenFileInput\n        @hiddenFileInput = null\n      delete @element.dropzone\n      Dropzone.instances.splice Dropzone.instances.indexOf(this), 1\n\n\n    updateTotalUploadProgress: ->\n      totalBytesSent = 0\n      totalBytes = 0\n\n      activeFiles = @getActiveFiles()\n\n      if activeFiles.length\n        for file in @getActiveFiles()\n          totalBytesSent += file.upload.bytesSent\n          totalBytes += file.upload.total\n        totalUploadProgress = 100 * totalBytesSent / totalBytes\n      else\n        totalUploadProgress = 100\n\n      @emit \"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent\n\n    # @options.paramName can be a function taking one parameter rather than a string.\n    # A parameter name for a file is obtained simply by calling this with an index number.\n    _getParamName: (n) ->\n      if typeof @options.paramName is \"function\"\n        @options.paramName n\n      else\n        \"#{@options.paramName}#{if @options.uploadMultiple then \"[#{n}]\" else \"\"}\"\n\n    # If @options.renameFile is a function,\n    # the function will be used to rename the file.name before appending it to the formData\n    _renameFile: (file) ->\n      return file.name unless typeof @options.renameFile is \"function\"\n      @options.renameFile file\n\n    # Returns a form that can be used as fallback if the browser does not support DragnDrop\n    #\n    # If the dropzone is already a form, only the input field and button are returned. Otherwise a complete form element is provided.\n    # This code has to pass in IE7 :(\n    getFallbackForm: ->\n      return existingFallback if existingFallback = @getExistingFallback()\n\n      fieldsString = \"\"\"<div class=\"dz-fallback\">\"\"\"\n      fieldsString += \"\"\"<p>#{@options.dictFallbackText}</p>\"\"\" if @options.dictFallbackText\n      fieldsString += \"\"\"<input type=\"file\" name=\"#{@_getParamName 0}\" #{if @options.uploadMultiple then 'multiple=\"multiple\"' } /><input type=\"submit\" value=\"Upload!\"></div>\"\"\"\n\n      fields = Dropzone.createElement fieldsString\n      if @element.tagName isnt \"FORM\"\n        form = Dropzone.createElement(\"\"\"<form action=\"#{@options.url}\" enctype=\"multipart/form-data\" method=\"#{@options.method}\"></form>\"\"\")\n        form.appendChild fields\n      else\n        # Make sure that the enctype and method attributes are set properly\n        @element.setAttribute \"enctype\", \"multipart/form-data\"\n        @element.setAttribute \"method\", @options.method\n      form ? fields\n\n\n    # Returns the fallback elements if they exist already\n    #\n    # This code has to pass in IE7 :(\n    getExistingFallback: ->\n      getFallback = (elements) -> return el for el in elements when /(^| )fallback($| )/.test el.className\n\n      for tagName in [ \"div\", \"form\" ]\n        return fallback if fallback = getFallback @element.getElementsByTagName tagName\n\n\n    # Activates all listeners stored in @listeners\n    setupEventListeners: ->\n      for elementListeners in @listeners\n        elementListeners.element.addEventListener event, listener, false for event, listener of elementListeners.events\n\n\n    # Deactivates all listeners stored in @listeners\n    removeEventListeners: ->\n      for elementListeners in @listeners\n        elementListeners.element.removeEventListener event, listener, false for event, listener of elementListeners.events\n\n    # Removes all event listeners and cancels all files in the queue or being processed.\n    disable: ->\n      @clickableElements.forEach (element) -> element.classList.remove \"dz-clickable\"\n      @removeEventListeners()\n\n      @cancelUpload file for file in @files\n\n    enable: ->\n      @clickableElements.forEach (element) -> element.classList.add \"dz-clickable\"\n      @setupEventListeners()\n\n    # Returns a nicely formatted filesize\n    filesize: (size) ->\n      selectedSize = 0\n      selectedUnit = \"b\"\n\n      if size > 0\n        units = [ 'tb', 'gb', 'mb', 'kb', 'b' ]\n\n        for unit, i in units\n          cutoff = Math.pow(@options.filesizeBase, 4 - i) / 10\n\n          if size >= cutoff\n            selectedSize = size / Math.pow(@options.filesizeBase, 4 - i)\n            selectedUnit = unit\n            break\n\n        selectedSize = Math.round(10 * selectedSize) / 10 # Cutting of digits\n\n      \"<strong>#{tools.convertNumberToPersian(selectedSize.toString())}</strong> #{@options.dictFileSizeUnits[selectedUnit]}\"\n\n\n    # Adds or removes the `dz-max-files-reached` class from the form.\n    _updateMaxFilesReachedClass: ->\n      if @options.maxFiles? and @getAcceptedFiles().length >= @options.maxFiles\n        @emit 'maxfilesreached', @files if @getAcceptedFiles().length == @options.maxFiles\n        @element.classList.add \"dz-max-files-reached\"\n      else\n        @element.classList.remove \"dz-max-files-reached\"\n\n\n\n    drop: (e) ->\n      return unless e.dataTransfer\n      @emit \"drop\", e\n\n      files = e.dataTransfer.files\n      @emit \"addedfiles\", files\n\n      # Even if it's a folder, files.length will contain the folders.\n      if files.length\n        items = e.dataTransfer.items\n        if items and items.length and (items[0].webkitGetAsEntry?)\n          # The browser supports dropping of folders, so handle items instead of files\n          @_addFilesFromItems items\n        else\n          @handleFiles files\n      return\n\n    paste: (e) ->\n      return unless e?.clipboardData?.items?\n\n      @emit \"paste\", e\n      items = e.clipboardData.items\n\n      @_addFilesFromItems items if items.length\n\n\n    handleFiles: (files) ->\n      @addFile file for file in files\n\n    # When a folder is dropped (or files are pasted), items must be handled\n    # instead of files.\n    _addFilesFromItems: (items) ->\n      for item in items\n        if item.webkitGetAsEntry? and entry = item.webkitGetAsEntry()\n          if entry.isFile\n            @addFile item.getAsFile()\n          else if entry.isDirectory\n            # Append all files from that directory to files\n            @_addFilesFromDirectory entry, entry.name\n        else if item.getAsFile?\n          if !item.kind? or item.kind == \"file\"\n            @addFile item.getAsFile()\n\n\n    # Goes through the directory, and adds each file it finds recursively\n    _addFilesFromDirectory: (directory, path) ->\n      dirReader = directory.createReader()\n\n      errorHandler = (error) -> console?.log? error\n\n      readEntries = () =>\n        dirReader.readEntries (entries) =>\n          if entries.length > 0\n            for entry in entries\n              if entry.isFile\n                entry.file (file) =>\n                  return if @options.ignoreHiddenFiles and file.name.substring(0, 1) is '.'\n                  file.fullPath = \"#{path}/#{file.name}\"\n                  @addFile file\n              else if entry.isDirectory\n                @_addFilesFromDirectory entry, \"#{path}/#{entry.name}\"\n\n            # Recursively call readEntries() again, since browser only handle\n            # the first 100 entries.\n            # See: https://developer.mozilla.org/en-US/docs/Web/API/DirectoryReader#readEntries\n            readEntries()\n          return null\n        , errorHandler\n\n      readEntries()\n\n\n\n    # If `done()` is called without argument the file is accepted\n    # If you call it with an error message, the file is rejected\n    # (This allows for asynchronous validation)\n    #\n    # This function checks the filesize, and if the file.type passes the\n    # `acceptedFiles` check.\n    accept: (file, done) ->\n      if file.size > @options.maxFilesize * 1024 * 1024\n        done @options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", @options.maxFilesize)\n      else unless Dropzone.isValidFile file, @options.acceptedFiles\n        done @options.dictInvalidFileType\n      else if @options.maxFiles? and @getAcceptedFiles().length >= @options.maxFiles\n        done @options.dictMaxFilesExceeded.replace \"{{maxFiles}}\", @options.maxFiles\n        @emit \"maxfilesexceeded\", file\n      else\n        @options.accept.call this, file, done\n\n    addFile: (file) ->\n      fileNewName = @_renameFile file\n      ###\n      Arash Khajelou\n      Added these lines to check the file is already added to the system or not\n      ###\n      if (_.findIndex @files, { name :  fileNewName}) != -1\n        jQuery(@element).trigger 'message:danger', @options.dictFileExists\n        return\n      file.upload =\n        progress: 0\n        # Setting the total upload size to file.size for the beginning\n        # It's actual different than the size to be transmitted.\n        total: file.size\n        bytesSent: 0\n        filename: fileNewName\n      @files.push file\n\n      file.status = Dropzone.ADDED\n\n      @emit \"addedfile\", file\n\n      @_enqueueThumbnail file\n\n      @accept file, (error) =>\n        if error\n          file.accepted = false\n          @_errorProcessing [ file ], error # Will set the file.status\n        else\n          file.accepted = true\n          @enqueueFile file if @options.autoQueue # Will set .accepted = true\n        @_updateMaxFilesReachedClass()\n\n\n    # Wrapper for enqueueFile\n    enqueueFiles: (files) -> @enqueueFile file for file in files; null\n\n    enqueueFile: (file) ->\n      if file.status == Dropzone.ADDED and file.accepted == true\n        file.status = Dropzone.QUEUED\n        if @options.autoProcessQueue\n          setTimeout (=> @processQueue()), 0 # Deferring the call\n      else\n        throw new Error \"This file can't be queued because it has already been processed or was rejected.\"\n\n\n    _thumbnailQueue: [ ]\n    _processingThumbnail: no\n    _enqueueThumbnail: (file) ->\n      if @options.createImageThumbnails and file.type.match(/image.*/) and file.size <= @options.maxThumbnailFilesize * 1024 * 1024\n        @_thumbnailQueue.push(file)\n        setTimeout (=> @_processThumbnailQueue()), 0 # Deferring the call\n\n    _processThumbnailQueue: ->\n      return if @_processingThumbnail or @_thumbnailQueue.length == 0\n\n      @_processingThumbnail = yes\n      file = @_thumbnailQueue.shift()\n      @createThumbnail file, @options.thumbnailWidth, @options.thumbnailHeight, @options.thumbnailMethod, true, (dataUrl) =>\n        @emit \"thumbnail\", file, dataUrl\n        @_processingThumbnail = no\n        @_processThumbnailQueue()\n\n\n    # Can be called by the user to remove a file\n    removeFile: (file) ->\n      @cancelUpload file if file.status == Dropzone.UPLOADING\n      @files = without @files, file\n\n      @emit \"removedfile\", file\n      @emit \"reset\" if @files.length == 0\n\n    # Removes all files that aren't currently processed from the list\n    removeAllFiles: (cancelIfNecessary = off) ->\n      # Create a copy of files since removeFile() changes the @files array.\n      for file in @files.slice()\n        @removeFile file if file.status != Dropzone.UPLOADING || cancelIfNecessary\n      return null\n\n    # Resizes an image before it gets sent to the server. This function is the default behavior of\n    # `options.transformFile` if `resizeWidth` or `resizeHeight` are set. The callback is invoked with\n    # the resized blob.\n    resizeImage: (file, width, height, resizeMethod, callback) ->\n      @createThumbnail file, width, height, resizeMethod, false, (dataUrl, canvas) =>\n        if canvas == null\n          # The image has not been resized\n          callback file\n        else\n          resizeMimeType = @options.resizeMimeType\n          resizeMimeType ?= file.type\n          resizedDataURL = canvas.toDataURL resizeMimeType, @options.resizeQuality\n          if resizeMimeType == 'image/jpeg' || resizeMimeType == 'image/jpg'\n            # Now add the original EXIF information\n            resizedDataURL = ExifRestore.restore file.dataURL, resizedDataURL\n          callback Dropzone.dataURItoBlob resizedDataURL\n\n    createThumbnail: (file, width, height, resizeMethod, fixOrientation, callback) ->\n      fileReader = new FileReader\n\n      fileReader.onload = =>\n\n        file.dataURL = fileReader.result\n\n        # Don't bother creating a thumbnail for SVG images since they're vector\n        if file.type == \"image/svg+xml\"\n          callback(fileReader.result) if callback?\n          return\n\n        @createThumbnailFromUrl file, width, height, resizeMethod, fixOrientation, callback\n\n      fileReader.readAsDataURL file\n\n    createThumbnailFromUrl: (file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) ->\n      # Not using `new Image` here because of a bug in latest Chrome versions.\n      # See https://github.com/enyo/dropzone/pull/226\n      img = document.createElement \"img\"\n\n      img.crossOrigin = crossOrigin if crossOrigin\n\n      img.onload = =>\n        loadExif = (callback) -> callback 1\n        if EXIF? and fixOrientation\n          loadExif = (callback) ->\n            EXIF.getData img, () ->\n              callback EXIF.getTag this, 'Orientation'\n\n        loadExif (orientation) =>\n          file.width = img.width\n          file.height = img.height\n\n          resizeInfo = @options.resize.call @, file, width, height, resizeMethod\n\n          canvas = document.createElement \"canvas\"\n          ctx = canvas.getContext \"2d\"\n\n          canvas.width = resizeInfo.trgWidth\n          canvas.height = resizeInfo.trgHeight\n\n          if orientation > 4\n            canvas.width = resizeInfo.trgHeight\n            canvas.height = resizeInfo.trgWidth\n\n          switch orientation\n            when 2\n              # horizontal flip\n              ctx.translate canvas.width, 0\n              ctx.scale -1, 1\n            when 3\n              # 180° rotate left\n              ctx.translate canvas.width, canvas.height\n              ctx.rotate Math.PI\n            when 4\n              # vertical flip\n              ctx.translate 0, canvas.height\n              ctx.scale 1, -1\n            when 5\n              # vertical flip + 90 rotate right\n              ctx.rotate 0.5 * Math.PI\n              ctx.scale 1, -1\n            when 6\n              # 90° rotate right\n              ctx.rotate 0.5 * Math.PI\n              ctx.translate 0, -canvas.height\n            when 7\n              # horizontal flip + 90 rotate right\n              ctx.rotate 0.5 * Math.PI\n              ctx.translate canvas.width, -canvas.height\n              ctx.scale -1, 1\n            when 8\n              # 90° rotate left\n              ctx.rotate -0.5 * Math.PI\n              ctx.translate -canvas.width, 0\n\n          # This is a bugfix for iOS' scaling bug.\n          drawImageIOSFix ctx, img, resizeInfo.srcX ? 0, resizeInfo.srcY ? 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX ? 0, resizeInfo.trgY ? 0, resizeInfo.trgWidth, resizeInfo.trgHeight\n\n          thumbnail = canvas.toDataURL \"image/png\"\n\n          callback(thumbnail, canvas) if callback?\n\n      img.onerror = callback if callback?\n\n      img.src = file.dataURL\n\n\n    # Goes through the queue and processes files if there aren't too many already.\n    processQueue: ->\n      parallelUploads = @options.parallelUploads\n      processingLength = @getUploadingFiles().length\n      i = processingLength\n\n      # There are already at least as many files uploading than should be\n      return if processingLength >= parallelUploads\n\n      queuedFiles = @getQueuedFiles()\n\n      return unless queuedFiles.length > 0\n\n      if @options.uploadMultiple\n        # The files should be uploaded in one request\n        @processFiles queuedFiles.slice 0, (parallelUploads - processingLength)\n      else\n        while i < parallelUploads\n          return unless queuedFiles.length # Nothing left to process\n          @processFile queuedFiles.shift()\n          i++\n\n\n    # Wrapper for `processFiles`\n    processFile: (file) -> @processFiles [ file ]\n\n\n    # Loads the file, then calls finishedLoading()\n    processFiles: (files) ->\n      for file in files\n        file.processing = yes # Backwards compatibility\n        file.status = Dropzone.UPLOADING\n\n        @emit \"processing\", file\n\n      @emit \"processingmultiple\", files if @options.uploadMultiple\n\n      @uploadFiles files\n\n\n\n    _getFilesWithXhr: (xhr) -> files = (file for file in @files when file.xhr == xhr)\n\n\n    # Cancels the file upload and sets the status to CANCELED\n    # **if** the file is actually being uploaded.\n    # If it's still in the queue, the file is being removed from it and the status\n    # set to CANCELED.\n    cancelUpload: (file) ->\n      if file.status == Dropzone.UPLOADING\n        groupedFiles = @_getFilesWithXhr file.xhr\n        groupedFile.status = Dropzone.CANCELED for groupedFile in groupedFiles\n        file.xhr.abort()\n        @emit \"canceled\", groupedFile for groupedFile in groupedFiles\n        @emit \"canceledmultiple\", groupedFiles if @options.uploadMultiple\n\n      else if file.status in [ Dropzone.ADDED, Dropzone.QUEUED ]\n        file.status = Dropzone.CANCELED\n        @emit \"canceled\", file\n        @emit \"canceledmultiple\", [ file ] if @options.uploadMultiple\n\n      @processQueue() if @options.autoProcessQueue\n\n    resolveOption = (option, args...) ->\n      if typeof option == 'function'\n        return option.apply(@, args)\n      option\n\n    # Wrapper for uploadFiles()\n    uploadFile: (file) -> @uploadFiles [ file ]\n\n    uploadFiles: (files) ->\n      xhr = new XMLHttpRequest()\n\n      # Put the xhr object in the file objects to be able to reference it later.\n      file.xhr = xhr for file in files\n\n      method = resolveOption @options.method, files\n      url = resolveOption @options.url, files\n      xhr.open method, url, true\n\n      # Setting the timeout after open because of IE11 issue: https://gitlab.com/meno/dropzone/issues/8\n      xhr.timeout = resolveOption @options.timeout, files\n\n      # Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n      xhr.withCredentials = !!@options.withCredentials\n\n\n      response = null\n\n      handleError = =>\n        for file in files\n          @_errorProcessing files, response || @options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr\n\n\n      updateProgress = (e) =>\n        if e?\n          progress = 100 * e.loaded / e.total\n\n          for file in files\n            file.upload.progress = progress\n            file.upload.total = e.total\n            file.upload.bytesSent = e.loaded\n        else\n          # Called when the file finished uploading\n\n          allFilesFinished = yes\n\n          progress = 100\n\n          for file in files\n            allFilesFinished = no unless file.upload.progress == 100 and file.upload.bytesSent == file.upload.total\n            file.upload.progress = progress\n            file.upload.bytesSent = file.upload.total\n\n          # Nothing to do, all files already at 100%\n          return if allFilesFinished\n\n        for file in files\n          @emit \"uploadprogress\", file, progress, file.upload.bytesSent\n\n      xhr.onload = (e) =>\n        return if files[0].status == Dropzone.CANCELED\n\n        return unless xhr.readyState is 4\n\n        if xhr.responseType != 'arraybuffer' && xhr.responseType != 'blob'\n          response = xhr.responseText\n\n          if xhr.getResponseHeader(\"content-type\") and ~xhr.getResponseHeader(\"content-type\").indexOf \"application/json\"\n            try\n              response = JSON.parse response\n            catch e\n              response = \"Invalid JSON response from server.\"\n\n        updateProgress()\n\n        unless 200 <= xhr.status < 300\n          handleError()\n        else\n          @_finished files, response, e\n\n      xhr.onerror = =>\n        return if files[0].status == Dropzone.CANCELED\n        handleError()\n\n      # Some browsers do not have the .upload property\n      progressObj = xhr.upload ? xhr\n      progressObj.onprogress = updateProgress\n\n      headers =\n        \"Accept\": \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\",\n\n      extend headers, @options.headers if @options.headers\n\n      for headerName, headerValue of headers\n        xhr.setRequestHeader headerName, headerValue if headerValue\n\n      formData = new FormData()\n\n      # Adding all @options parameters\n      formData.append key, value for key, value of @options.params if @options.params\n      jQuery(@element).find('ul.form-data li').each () ->\n        parameter = jQuery(this)\n        formData.append (parameter.attr('name') || 'null') , (parameter.attr('value') || 'null')\n\n      # Let the user add additional data if necessary\n      @emit \"sending\", file, xhr, formData for file in files\n      @emit \"sendingmultiple\", files, xhr, formData if @options.uploadMultiple\n\n\n      # Take care of other input elements\n      if @element.tagName == \"FORM\"\n        for input in @element.querySelectorAll \"input, textarea, select, button\"\n          inputName = input.getAttribute \"name\"\n          inputType = input.getAttribute \"type\"\n\n          if input.tagName == \"SELECT\" and input.hasAttribute \"multiple\"\n            # Possibly multiple values\n            formData.append inputName, option.value for option in input.options when option.selected\n          else if !inputType or (inputType.toLowerCase() not in [ \"checkbox\", \"radio\" ]) or input.checked\n            formData.append inputName, input.value\n\n\n      # Finally add the files\n      # Has to be last because some servers (eg: S3) expect the file to be the last parameter\n\n      # Clumsy way of handling asynchronous calls, until I get to add a proper Future library.\n      doneCounter = 0\n\n      for i in [0..files.length-1]\n        doneFunction = (file, paramName, fileName) => (transformedFile) =>\n          formData.append paramName, transformedFile, fileName\n          @submitRequest xhr, formData, files if ++doneCounter == files.length\n\n        @options.transformFile.call @, files[i], doneFunction(files[i], @_getParamName(i), files[i].upload.filename)\n\n\n    submitRequest: (xhr, formData, files) ->\n      xhr.send formData\n\n    # Called internally when processing is finished.\n    # Individual callbacks have to be called in the appropriate sections.\n    _finished: (files, responseText, e) ->\n      for file in files\n        file.status = Dropzone.SUCCESS\n        ###\n        end of custom scripts\n        ###\n        @emit \"success\", file, responseText, e\n        @emit \"complete\", file\n      if @options.uploadMultiple\n        @emit \"successmultiple\", files, responseText, e\n        @emit \"completemultiple\", files\n\n      @processQueue() if @options.autoProcessQueue\n\n    # Called internally when processing is finished.\n    # Individual callbacks have to be called in the appropriate sections.\n    _errorProcessing: (files, message, xhr) ->\n      if ( typeof message.transmission != \"undefined\" && typeof message.transmission.messages != \"undefined\" and\n      message.transmission.messages.length > 0 )\n        jQuery(@element).trigger 'message:danger', message.transmission.messages[0]\n      for file in files\n        file.status = Dropzone.ERROR\n        @emit \"error\", file, message, xhr\n        @emit \"complete\", file\n      if @options.uploadMultiple\n        @emit \"errormultiple\", files, message, xhr\n        @emit \"completemultiple\", files\n\n      @processQueue() if @options.autoProcessQueue\n\n\n\n  Dropzone.version = \"5.1.1\"\n\n\n  # This is a map of options for your different dropzones. Add configurations\n  # to this object for your different dropzone elemens.\n  #\n  # Example:\n  #\n  #     Dropzone.options.myDropzoneElementId = { maxFilesize: 1 };\n  #\n  # To disable autoDiscover for a specific element, you can set `false` as an option:\n  #\n  #     Dropzone.options.myDisabledElementId = false;\n  #\n  # And in html:\n  #\n  #     <form action=\"/upload\" id=\"my-dropzone-element-id\" class=\"dropzone\"></form>\n  Dropzone.options = { }\n\n  Dropzone.setMainFile = (file) =>\n    console.log(file)\n  Dropzone.setSecondaryFile = (file) =>\n    console.log(file)\n  Dropzone.addCaptionToFile = (file) =>\n    console.log(file)\n\n  # Returns the options for an element or undefined if none available.\n  Dropzone.optionsForElement = (element) ->\n    # Get the `Dropzone.options.elementId` for this element if it exists\n    if element.getAttribute(\"id\") then Dropzone.options[camelize element.getAttribute \"id\"] else undefined\n\n\n  # Holds a list of all dropzone instances\n  Dropzone.instances = [ ]\n\n  # Returns the dropzone for given element if any\n  Dropzone.forElement = (element) ->\n    element = document.querySelector element if typeof element == \"string\"\n    throw new Error \"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\" unless element?.dropzone?\n    return element.dropzone\n\n\n  # Set to false if you don't want Dropzone to automatically find and attach to .dropzone elements.\n  Dropzone.autoDiscover = on\n\n  # Looks for all .dropzone elements and creates a dropzone for them\n  Dropzone.discover = ->\n    if document.querySelectorAll\n      dropzones = document.querySelectorAll \".dropzone\"\n    else\n      dropzones = [ ]\n      # IE :(\n      checkElements = (elements) ->\n        for el in elements\n          dropzones.push el if /(^| )dropzone($| )/.test el.className\n      checkElements document.getElementsByTagName \"div\"\n      checkElements document.getElementsByTagName \"form\"\n\n    for dropzone in dropzones\n      # Create a dropzone unless auto discover has been disabled for specific element\n      new Dropzone dropzone unless Dropzone.optionsForElement(dropzone) == false\n\n\n\n  # Since the whole Drag'n'Drop API is pretty new, some browsers implement it,\n  # but not correctly.\n  # So I created a blacklist of userAgents. Yes, yes. Browser sniffing, I know.\n  # But what to do when browsers *theoretically* support an API, but crash\n  # when using it.\n  #\n  # This is a list of regular expressions tested against navigator.userAgent\n  #\n  # ** It should only be used on browser that *do* support the API, but\n  # incorrectly **\n  #\n  Dropzone.blacklistedBrowsers = [\n    # The mac os version of opera 12 seems to have a problem with the File drag'n'drop API.\n    /opera.*Macintosh.*version\\/12/i\n    # /MSIE\\ 10/i\n  ]\n\n\n  # Checks if the browser is supported\n  Dropzone.isBrowserSupported = ->\n    capableBrowser = yes\n\n    if window.File and window.FileReader and window.FileList and window.Blob and window.FormData and document.querySelector\n      unless \"classList\" of document.createElement \"a\"\n        capableBrowser = no\n      else\n        # The browser supports the API, but may be blacklisted.\n        for regex in Dropzone.blacklistedBrowsers\n          if regex.test navigator.userAgent\n            capableBrowser = no\n            continue\n    else\n      capableBrowser = no\n\n    capableBrowser\n\n  Dropzone.dataURItoBlob = (dataURI) ->\n    # convert base64 to raw binary data held in a string\n    # doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n    byteString = atob dataURI.split(',')[1]\n\n    # separate out the mime component\n    mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n\n    # write the bytes of the string to an ArrayBuffer\n    ab = new ArrayBuffer byteString.length\n    ia = new Uint8Array ab\n    for i in [0 .. byteString.length]\n      ia[i] = byteString.charCodeAt i\n\n    # write the ArrayBuffer to a blob\n    new Blob [ab], {type: mimeString}\n\n  # Returns an array without the rejected item\n  without = (list, rejectedItem) -> item for item in list when item isnt rejectedItem\n\n  # abc-def_ghi -> abcDefGhi\n  camelize = (str) -> str.replace /[\\-_](\\w)/g, (match) -> match.charAt(1).toUpperCase()\n\n  # Creates an element from string\n  Dropzone.createElement = (string) ->\n    div = document.createElement \"div\"\n    div.innerHTML = string\n    div.childNodes[0]\n\n  # Tests if given element is inside (or simply is) the container\n  Dropzone.elementInside = (element, container) ->\n    return yes if element == container # Coffeescript doesn't support do/while loops\n    return yes while element = element.parentNode when element == container\n    return no\n\n\n\n  Dropzone.getElement = (el, name) ->\n    if typeof el == \"string\"\n      element = document.querySelector el\n    else if el.nodeType?\n      element = el\n    throw new Error \"Invalid `#{name}` option provided. Please provide a CSS selector or a plain HTML element.\" unless element?\n    return element\n\n\n  Dropzone.getElements = (els, name) ->\n    if els instanceof Array\n      elements = [ ]\n      try\n        elements.push @getElement el, name for el in els\n      catch e\n        elements = null\n    else if typeof els == \"string\"\n      elements = [ ]\n      elements.push el for el in document.querySelectorAll els\n    else if els.nodeType?\n      elements = [ els ]\n\n    throw new Error \"Invalid `#{name}` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\" unless elements? and elements.length\n\n    return elements\n\n  # Asks the user the question and calls accepted or rejected accordingly\n  #\n  # The default implementation just uses `window.confirm` and then calls the\n  # appropriate callback.\n\n  #Dropzone.confirm = (question, accepted, rejected) ->\n  #  if window.confirm question\n  #    accepted()\n  #  else if rejected?\n  #    rejected()\n\n  Dropzone.confirm = (question, accepted, rejected) ->\n    window.customConfirm question, accepted, rejected\n\n  # Validates the mime type like this:\n  #\n  # https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept\n  Dropzone.isValidFile = (file, acceptedFiles) ->\n    return yes unless acceptedFiles # If there are no accepted mime types, it's OK\n    acceptedFiles = acceptedFiles.split \",\"\n\n    mimeType = file.type\n    baseMimeType = mimeType.replace /\\/.*$/, \"\"\n\n    for validType in acceptedFiles\n      validType = validType.trim()\n      if validType.charAt(0) == \".\"\n        return yes if file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) != -1\n      else if /\\/\\*$/.test validType\n        # This is something like a image/* mime type\n        return yes if baseMimeType == validType.replace /\\/.*$/, \"\"\n      else\n        return yes if mimeType == validType\n\n    return no\n\n\n  # Augment jQuery\n  if jQuery?\n    jQuery.fn.dropzone = (options) ->\n      this.each -> new Dropzone this, options\n\n\n\n\n  if module?\n    module.exports = Dropzone\n  else\n    window.Dropzone = Dropzone\n\n\n\n\n\n  # Dropzone file status codes\n  Dropzone.ADDED = \"added\"\n\n  Dropzone.QUEUED = \"queued\"\n  # For backwards compatibility. Now, if a file is accepted, it's either queued\n  # or uploading.\n  Dropzone.ACCEPTED = Dropzone.QUEUED\n\n  Dropzone.UPLOADING = \"uploading\"\n  Dropzone.PROCESSING = Dropzone.UPLOADING # alias\n\n  Dropzone.CANCELED = \"canceled\"\n  Dropzone.ERROR = \"error\"\n  Dropzone.SUCCESS = \"success\"\n\n\n\n\n\n  ###\n\n  Bugfix for iOS 6 and 7\n  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n  based on the work of https://github.com/stomita/ios-imagefile-megapixel\n\n  ###\n\n  # Detecting vertical squash in loaded image.\n  # Fixes a bug which squash image vertically while drawing into canvas for some images.\n  # This is a bug in iOS6 devices. This function from https://github.com/stomita/ios-imagefile-megapixel\n  detectVerticalSquash = (img) ->\n    iw = img.naturalWidth\n    ih = img.naturalHeight\n    canvas = document.createElement(\"canvas\")\n    canvas.width = 1\n    canvas.height = ih\n    ctx = canvas.getContext(\"2d\")\n    ctx.drawImage img, 0, 0\n    data = ctx.getImageData(1, 0, 1, ih).data\n\n\n    # search image edge pixel position in case it is squashed vertically.\n    sy = 0\n    ey = ih\n    py = ih\n    while py > sy\n      alpha = data[(py - 1) * 4 + 3]\n\n      if alpha is 0 then ey = py else sy = py\n\n      py = (ey + sy) >> 1\n    ratio = (py / ih)\n\n    if (ratio is 0) then 1 else ratio\n\n  # A replacement for context.drawImage\n  # (args are for source and destination).\n  drawImageIOSFix = (ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) ->\n    vertSquashRatio = detectVerticalSquash img\n    ctx.drawImage img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio\n\n\n\n\n\n  # Based on MinifyJpeg\n  # Source: http://www.perry.cz/files/ExifRestorer.js\n  # http://elicon.blog57.fc2.com/blog-entry-206.html\n  class ExifRestore\n    @KEY_STR: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\n    @encode64: (input) ->\n      output = ''\n      chr1 = undefined\n      chr2 = undefined\n      chr3 = ''\n      enc1 = undefined\n      enc2 = undefined\n      enc3 = undefined\n      enc4 = ''\n      i = 0\n      loop\n        chr1 = input[i++]\n        chr2 = input[i++]\n        chr3 = input[i++]\n        enc1 = chr1 >> 2\n        enc2 = (chr1 & 3) << 4 | chr2 >> 4\n        enc3 = (chr2 & 15) << 2 | chr3 >> 6\n        enc4 = chr3 & 63\n        if isNaN(chr2)\n          enc3 = enc4 = 64\n        else if isNaN(chr3)\n          enc4 = 64\n        output = output + @KEY_STR.charAt(enc1) + @KEY_STR.charAt(enc2) + @KEY_STR.charAt(enc3) + @KEY_STR.charAt(enc4)\n        chr1 = chr2 = chr3 = ''\n        enc1 = enc2 = enc3 = enc4 = ''\n        unless i < input.length\n          break\n      output\n\n    @restore: (origFileBase64, resizedFileBase64) ->\n      if !origFileBase64.match('data:image/jpeg;base64,')\n        return resizedFileBase64\n      rawImage = @decode64(origFileBase64.replace('data:image/jpeg;base64,', ''))\n      segments = @slice2Segments(rawImage)\n      image = @exifManipulation(resizedFileBase64, segments)\n      'data:image/jpeg;base64,' + @encode64 image\n\n    @exifManipulation: (resizedFileBase64, segments) ->\n      exifArray = @getExifArray(segments)\n      newImageArray = @insertExif(resizedFileBase64, exifArray)\n      aBuffer = new Uint8Array(newImageArray)\n      aBuffer\n\n    @getExifArray: (segments) ->\n      seg = undefined\n      x = 0\n      while x < segments.length\n        seg = segments[x]\n        if seg[0] == 255 & seg[1] == 225\n          return seg\n        x++\n      []\n\n    @insertExif: (resizedFileBase64, exifArray) ->\n      imageData = resizedFileBase64.replace('data:image/jpeg;base64,', '')\n      buf = @decode64(imageData)\n      separatePoint = buf.indexOf(255, 3)\n      mae = buf.slice(0, separatePoint)\n      ato = buf.slice(separatePoint)\n      array = mae\n      array = array.concat(exifArray)\n      array = array.concat(ato)\n      array\n\n    @slice2Segments: (rawImageArray) ->\n      head = 0\n      segments = []\n      loop\n        if rawImageArray[head] == 255 & rawImageArray[head + 1] == 218\n          break\n        if rawImageArray[head] == 255 & rawImageArray[head + 1] == 216\n          head += 2\n        else\n          length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3]\n          endPoint = head + length + 2\n          seg = rawImageArray.slice(head, endPoint)\n          segments.push seg\n          head = endPoint\n        if head > rawImageArray.length\n          break\n      segments\n\n    @decode64: (input) ->\n      output = ''\n      chr1 = undefined\n      chr2 = undefined\n      chr3 = ''\n      enc1 = undefined\n      enc2 = undefined\n      enc3 = undefined\n      enc4 = ''\n      i = 0\n      buf = []\n      # remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n      base64test = /[^A-Za-z0-9\\+\\/\\=]/g\n      if base64test.exec(input)\n        console.warning 'There were invalid base64 characters in the input text.\\n' + 'Valid base64 characters are A-Z, a-z, 0-9, \\'+\\', \\'/\\',and \\'=\\'\\n' + 'Expect errors in decoding.'\n      input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '')\n      loop\n        enc1 = @KEY_STR.indexOf(input.charAt(i++))\n        enc2 = @KEY_STR.indexOf(input.charAt(i++))\n        enc3 = @KEY_STR.indexOf(input.charAt(i++))\n        enc4 = @KEY_STR.indexOf(input.charAt(i++))\n        chr1 = enc1 << 2 | enc2 >> 4\n        chr2 = (enc2 & 15) << 4 | enc3 >> 2\n        chr3 = (enc3 & 3) << 6 | enc4\n        buf.push chr1\n        if enc3 != 64\n          buf.push chr2\n        if enc4 != 64\n          buf.push chr3\n        chr1 = chr2 = chr3 = ''\n        enc1 = enc2 = enc3 = enc4 = ''\n        unless i < input.length\n          break\n      buf\n\n\n\n\n  ###\n  # contentloaded.js\n  #\n  # Author: Diego Perini (diego.perini at gmail.com)\n  # Summary: cross-browser wrapper for DOMContentLoaded\n  # Updated: 20101020\n  # License: MIT\n  # Version: 1.2\n  #\n  # URL:\n  # http://javascript.nwbox.com/ContentLoaded/\n  # http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n  ###\n\n  # @win window reference\n  # @fn function reference\n  contentLoaded = (win, fn) ->\n    done = false\n    top = true\n    doc = win.document\n    root = doc.documentElement\n    add = (if doc.addEventListener then \"addEventListener\" else \"attachEvent\")\n    rem = (if doc.addEventListener then \"removeEventListener\" else \"detachEvent\")\n    pre = (if doc.addEventListener then \"\" else \"on\")\n    init = (e) ->\n      return  if e.type is \"readystatechange\" and doc.readyState isnt \"complete\"\n      ((if e.type is \"load\" then win else doc))[rem] pre + e.type, init, false\n      fn.call win, e.type or e  if not done and (done = true)\n\n    poll = ->\n      try\n        root.doScroll \"left\"\n      catch e\n        setTimeout poll, 50\n        return\n      init \"poll\"\n\n    unless doc.readyState is \"complete\"\n      if doc.createEventObject and root.doScroll\n        try\n          top = not win.frameElement\n        poll()  if top\n      doc[add] pre + \"DOMContentLoaded\", init, false\n      doc[add] pre + \"readystatechange\", init, false\n      win[add] pre + \"load\", init, false\n\n\n  # As a single function to be able to write tests.\n  Dropzone._autoDiscoverFunction = -> Dropzone.discover() if Dropzone.autoDiscover\n  contentLoaded window, Dropzone._autoDiscoverFunction\n"]}